core.import{ namespace:"items" source:"./components/items.stch" }

core.import{ namespace:"auth" source:"./screens/auth.stch" }
core.import{ namespace:"host" source:"./screens/host.stch" }
core.import{ namespace:"lobby" source:"./screens/lobby.stch" }
core.import{ namespace:"topic" source:"./screens/topic.stch" }

main( user ) = ui.app {
    name: "collect"    

    pageName: utils.is_authed {
        yes: core.cond {
            if: core.exists { 
                val: core.val {
                    src: model.get_profile_by_user{ user }
                    name: "current_page"
                }
            }
            then: core.val {
                src: model.get_profile_by_user{ user }
                name: "current_page"
            }
            else: utils.is_host {
                yes: "host"
                no: utils.has_topic {
                    yes: "topic"
                    no: "lobby"
                }
            }
        }
        no: "auth"
    }

    // auth
    page: auth.page

    // host
    page: host.page

    // lobby
    page: lobby.page

    // topic
    page: topic.page


    /*
    // theme
    theme: ui.theme {
        palette: {
            primary: "#59E0C3"
            secondary: "#F86666"
            background: {
                dark: "#1C1C1C"
                main: "#FBFAFF"
                light: "#FFFFFF"
            }
        }
        typography: {
            h1: {
                fontSize: 48
                fontWeight: 600
                fontFamily: "Montserrat"
                lineHeight: 1.5


            }
            h2: {
                fontSize: 24
                fontWeight: 600
                fontFamily: "Montserrat"
                lineHeight: 1.5
            }
            h3: {
                fontSize: 18
                fontWeight: 300
                fontFamily: "Montserrat"
                lineHeight: 1.5
            }
            h4: {
                fontSize: 13
                fontWeight: 300
                lineHeight: 1.5
            }
            h5: {
                fontSize: 13
                fontWeight: 300
                lineHeight: 1.5
            }
            h6: {
                fontSize: 13
                fontWeight: 700
                lineHeight: 1.5
            }
            body1: {
                fontWeight: 300
                fontSize: 17
                lineHeight: 1.5
            }
            body2: {
                fontWeight: 500
                fontSize: 17
                lineHeight: 1.5
            }
        }
        */


    event: ui.event {
        name: "switch_auth"
        handler( user inv ): grid.auth {
            connectedUser: user
            user: user.create {
                name: grid.argument{ inv name:"value" }
            }
        }
    }

    event: ui.event {
        name: "create_topic"
        handler( user inv ): model.create_topic {
            text: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "remove_topic"
        handler( user inv ): model.remove_topic_by_id {
            id: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "update_topic"
        handler( user inv ): model.update_topic {
            id: grid.argument{ inv name:"topic" }
            text: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "activate_topic"
        handler( user inv ): model.activate_topic {
            topic: core.echo{val: grid.argument{ inv name:"value" } msg:"topic"}
        }
    }

    event: ui.event {
        name: "activate_lobby"
        handler( user inv ): model.activate_lobby
    }

    event: ui.event {
        name: "create_item"
        handler( user inv ): model.create_item {
            topic: model.get_topic_by_id {
                id: grid.argument{ inv name:"topic" }
            } 
            text: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "remove_item"
        handler( user inv ): model.remove_item_by_id {
            id: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "update_item"
        handler( user inv ): model.update_item {
            id: grid.argument{ inv name:"item" }
            text: grid.argument{ inv name:"value" }
        }
    }

    event: ui.event {
        name: "rate_item"
        handler( user inv ): model.rate_item {
            profile: model.get_profile_by_user{ user }
            item: grid.argument{ inv name:"item" }
            score: grid.argument{ inv name:"score" }
        }
    }
}
core.export{ name:"main" def:main }
